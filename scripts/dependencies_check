# dependencies_check
# $@	Dependency files to check
#
# Each dependency is in the form of a tool to test for, optionally followed by
# a : and the name of a package if the package on a Debian-ish system is not
# named for the tool (i.e., qemu-user-static).
dependencies_check()
{
	local depfile deps missing

	# If we're building on a native arm platform, we don't need to check for
	# binfmt_misc or require it to be loaded.

	binfmt_misc_required=1

	case $(uname -m) in
		aarch64|arm*)
			binfmt_misc_required=0
			;;
	esac

	for depfile in "$@"; do
		if [[ -e "$depfile" ]]; then
			deps="$(sed -f "${SCRIPT_DIR}/remove-comments.sed" < "${BASE_DIR}/depends")"

		fi
		for dep in $deps; do
			if [[ $binfmt_misc_required -eq 0 && $dep =~  qemu[-].*[-]static ]]; then
				# we can skip qemu-.*-static dependence
				continue
			fi
			if ! hash "${dep%:*}" 2>/dev/null; then
				missing="${missing:+$missing }${dep#*:}"
			fi
		done
	done

	if [[ "$missing" ]]; then
		echo "Required dependencies not installed"
		echo
		echo "This can be resolved on Debian/Raspbian systems by installing:"
		echo "$missing"
		false
	fi

    # If we're building on a native arm platform, we don't need to check for
    # binfmt_misc or require it to be loaded.

	if [[ $binfmt_misc_required -eq 1 ]]; then
		if ! grep -q "/proc/sys/fs/binfmt_misc" /proc/mounts; then
			echo "Trying to mount binfmt_misc fs."
			
			if ! mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc \
                           || ! grep -q enabled /proc/sys/fs/binfmt_misc/status
			 then
				echo "Module binfmt_misc not loaded in host"
				echo "Please run:"
				echo "  sudo modprobe binfmt_misc"
				exit 1
			fi
		fi
	fi
}
